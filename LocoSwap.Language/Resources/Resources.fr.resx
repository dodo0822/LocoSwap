<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="add_to_rules" xml:space="preserve">
    <value>Créer règle</value>
  </data>
  <data name="all_vehicles" xml:space="preserve">
    <value>Lister tous les véhicules</value>
  </data>
  <data name="and_add_as_rule" xml:space="preserve">
    <value>et créer règle</value>
  </data>
  <data name="apply" xml:space="preserve">
    <value>Appliquer</value>
  </data>
  <data name="apply_all_rules" xml:space="preserve">
    <value>Appliquer toutes les règles</value>
  </data>
  <data name="author" xml:space="preserve">
    <value>Auteur</value>
  </data>
  <data name="browse" xml:space="preserve">
    <value>Parcourir...</value>
  </data>
  <data name="cancel" xml:space="preserve">
    <value>Annuler</value>
  </data>
  <data name="change_number" xml:space="preserve">
    <value>Changer numérotation</value>
  </data>
  <data name="check_all_scenario_consists" xml:space="preserve">
    <value>Contrôler toutes les rames de tous les scénarios à la sélection d'une route (lent !)</value>
  </data>
  <data name="clear_vehicles" xml:space="preserve">
    <value>Vider</value>
  </data>
  <data name="close" xml:space="preserve">
    <value>Fermer</value>
  </data>
  <data name="completion" xml:space="preserve">
    <value>Terminé</value>
  </data>
  <data name="completion_completedfailed" xml:space="preserve">
    <value>Échoué</value>
  </data>
  <data name="completion_completedsuccessfully" xml:space="preserve">
    <value>Réussi</value>
  </data>
  <data name="completion_notcompleted" xml:space="preserve">
    <value />
  </data>
  <data name="completion_notindb" xml:space="preserve">
    <value />
  </data>
  <data name="consists_in_scenario" xml:space="preserve">
    <value>Rames du scénario</value>
  </data>
  <data name="delete" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="delete_scenarios" xml:space="preserve">
    <value>Supprimer scénarios</value>
  </data>
  <data name="duration" xml:space="preserve">
    <value>Durée</value>
  </data>
  <data name="edit_scenario" xml:space="preserve">
    <value>Éditer le scenario</value>
  </data>
  <data name="edit_scenario_title" xml:space="preserve">
    <value>Éditer le scenario {0}</value>
  </data>
  <data name="enter_number_manually" xml:space="preserve">
    <value>Ou saisissez le numéro :</value>
  </data>
  <data name="error_cannot_read_scenario" xml:space="preserve">
    <value>Erreur : impossible de lire les détails du scénario (XML malformé)</value>
  </data>
  <data name="filter" xml:space="preserve">
    <value>Filtrer</value>
  </data>
  <data name="flip" xml:space="preserve">
    <value>Inverser véhicule</value>
  </data>
  <data name="flipped" xml:space="preserve">
    <value>Inversé ?</value>
  </data>
  <data name="game_save_date" xml:space="preserve">
    <value>Date sauvegarde</value>
  </data>
  <data name="hide_played_scenarios" xml:space="preserve">
    <value>Cacher scénarios joués</value>
  </data>
  <data name="id" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="insert_after" xml:space="preserve">
    <value>Insérer v</value>
  </data>
  <data name="insert_before" xml:space="preserve">
    <value>Insérer ^</value>
  </data>
  <data name="involved_in_consist_operation" xml:space="preserve">
    <value>Ce véhicule apparaît dans des instructions de couplage/découplage. LocoSwap conservera son numéro.</value>
  </data>
  <data name="language" xml:space="preserve">
    <value>Langue</value>
  </data>
  <data name="loading" xml:space="preserve">
    <value>Chargement...</value>
  </data>
  <data name="look_up_vehicles" xml:space="preserve">
    <value>Scanner véhicules</value>
  </data>
  <data name="msg_cannot_load_vehicle" xml:space="preserve">
    <value>Impossible de charger le véhicule "{0}"!</value>
  </data>
  <data name="msg_consist_empty" xml:space="preserve">
    <value>Il doit rester au moins un véhicule dans la rame</value>
  </data>
  <data name="msg_error" xml:space="preserve">
    <value>Erreur</value>
  </data>
  <data name="msg_first_time" xml:space="preserve">
    <value>Premier lancement : sélectionnez le chemin de votre Train Simulator</value>
  </data>
  <data name="msg_flip_completed" xml:space="preserve">
    <value>Les véhicules sélectionnés ont été inversés</value>
  </data>
  <data name="msg_message" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="msg_no_directory_selected" xml:space="preserve">
    <value>Merci de sélectionner un dossier.</value>
  </data>
  <data name="msg_no_vehicle_selected" xml:space="preserve">
    <value>Merci de sélectionner un véhicule.</value>
  </data>
  <data name="msg_scenario_saved" xml:space="preserve">
    <value>Le scénario a bien été sauvegardé.</value>
  </data>
  <data name="msg_ts_path_invalid" xml:space="preserve">
    <value>Le chemin sélectionné est invalide ! (Vérifiez qu'il contient RailWorks.exe)</value>
  </data>
  <data name="msg_ts_path_required" xml:space="preserve">
    <value>Un chemin valide vers TS est nécessaire à cette application. L'application va se terminer.</value>
  </data>
  <data name="msg_vehicles_added_to_rules" xml:space="preserve">
    <value>Les règles ont bien été créées pour ces véhicules.</value>
  </data>
  <data name="msg_vehicle_already_in_rules" xml:space="preserve">
    <value>Le véhicule "{0}" a déjà une règle de remplacement. Écraser cette règle ?</value>
  </data>
  <data name="msg_write_access_denied" xml:space="preserve">
    <value>Accès en écriture refusé. Vérifiez que Scenario.bin et ScenarioProperties.xml ne sont pas protégés en écriture.</value>
  </data>
  <data name="name" xml:space="preserve">
    <value>Nom</value>
  </data>
  <data name="new_vehicle_selected" xml:space="preserve">
    <value>Nouveau véhicule sélectionné</value>
  </data>
  <data name="number" xml:space="preserve">
    <value>Numéro</value>
  </data>
  <data name="numbering_list" xml:space="preserve">
    <value>Liste de numérotation</value>
  </data>
  <data name="numbering_list_not_found" xml:space="preserve">
    <value>Pas de liste de numérotation trouvée. Saisissez le numéro manuellement.</value>
  </data>
  <data name="ok" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="only_on_missing_stock" xml:space="preserve">
    <value>uniquement aux véhicules manquants (en jaune)</value>
  </data>
  <data name="on_all_stock" xml:space="preserve">
    <value>à tous les véhicules</value>
  </data>
  <data name="open_manual" xml:space="preserve">
    <value>Ouvrir le manuel</value>
  </data>
  <data name="open_scenario_directory" xml:space="preserve">
    <value>Ouvrir le dossier du scénario</value>
  </data>
  <data name="path" xml:space="preserve">
    <value>Chemin</value>
  </data>
  <data name="player_train_name" xml:space="preserve">
    <value>Train du joueur</value>
  </data>
  <data name="reading_scenario_files" xml:space="preserve">
    <value>Chargement du scénario...</value>
  </data>
  <data name="remove" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="replace" xml:space="preserve">
    <value>Remplacer</value>
  </data>
  <data name="replacement_rules" xml:space="preserve">
    <value>Règles de remplacement</value>
  </data>
  <data name="replacement_rules_management" xml:space="preserve">
    <value>Gestion des règles de remplacement</value>
  </data>
  <data name="replace_identical" xml:space="preserve">
    <value>Remplacer les identiques</value>
  </data>
  <data name="replace_with" xml:space="preserve">
    <value>Remplacer par</value>
  </data>
  <data name="route" xml:space="preserve">
    <value>Ligne</value>
  </data>
  <data name="rule" xml:space="preserve">
    <value>Règle</value>
  </data>
  <data name="rule_find" xml:space="preserve">
    <value>Chercher...</value>
  </data>
  <data name="rule_replace" xml:space="preserve">
    <value>Remplacer par...</value>
  </data>
  <data name="save" xml:space="preserve">
    <value>Sauvegarder</value>
  </data>
  <data name="saving_scenario" xml:space="preserve">
    <value>Enregistrement du scénario...</value>
  </data>
  <data name="scanning_ap_files" xml:space="preserve">
    <value>Scan des fichiers .ap...</value>
  </data>
  <data name="scanning_bin_files" xml:space="preserve">
    <value>Scan des fichiers .bin...</value>
  </data>
  <data name="scenario" xml:space="preserve">
    <value>Scénario</value>
  </data>
  <data name="scenario_delete_prompt_message" xml:space="preserve">
    <value>Etes-vous sûr de vouloir supprimer le(s) scénario(s) sélectionné(s) ?</value>
  </data>
  <data name="scenario_delete_prompt_title" xml:space="preserve">
    <value>Suppression de scénario(s)</value>
  </data>
  <data name="scenario_in_ap" xml:space="preserve">
    <value>*** Ce scénario est dans un fichier .ap. LocoSwap l'extraira automatiquement au moment de la sauvegarde. ***</value>
  </data>
  <data name="scenario_name_suffix" xml:space="preserve">
    <value>Suffixe au nom du scénario</value>
  </data>
  <data name="season" xml:space="preserve">
    <value>Saison</value>
  </data>
  <data name="season_autumn" xml:space="preserve">
    <value>Automne</value>
  </data>
  <data name="season_spring" xml:space="preserve">
    <value>Printemps</value>
  </data>
  <data name="season_summer" xml:space="preserve">
    <value>Été</value>
  </data>
  <data name="season_winter" xml:space="preserve">
    <value>Hiver</value>
  </data>
  <data name="select_ts_path" xml:space="preserve">
    <value>Sélectionnez le chemin de Train Simulator</value>
  </data>
  <data name="settings" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="start_time" xml:space="preserve">
    <value>Heure</value>
  </data>
  <data name="ts_directory" xml:space="preserve">
    <value>Dossier Train Simulator</value>
  </data>
  <data name="use_system_language" xml:space="preserve">
    <value>Utiliser la langue système</value>
  </data>
  <data name="vehicles_in_selected_consist" xml:space="preserve">
    <value>Véhicules de la rame</value>
  </data>
  <data name="vehicle_selected" xml:space="preserve">
    <value>Véhicule sélectionné</value>
  </data>
  <data name="vehicle_to_be_replaced" xml:space="preserve">
    <value>Véhicule à remplacer</value>
  </data>
</root>